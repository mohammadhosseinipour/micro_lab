;#include <header.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x40
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0xB0
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x20
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x30
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0xA0
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0xB0
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x10
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;
;void init_all_()
; 0002 0004 {

	.CSEG
;PCODE: $0000000D VOL: 0
;PCODE: $0000000E VOL: 0
; 0002 0005     // Declare your local variables here
; 0002 0006 
; 0002 0007 // Input/Output Ports initialization
; 0002 0008 // Port A initialization
; 0002 0009 // Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
; 0002 000A DDRA=(0<<DDA7) | (0<<DDA6) | (0<<DDA5) | (0<<DDA4) | (0<<DDA3) | (0<<DDA2) | (0<<DDA1) | (0<<DDA0);
;PCODE: $0000000F VOL: 0
;PCODE: $00000010 VOL: 0
; 0002 000B // State: Bit7=P Bit6=P Bit5=P Bit4=P Bit3=P Bit2=P Bit1=P Bit0=P
; 0002 000C PORTA=(1<<PORTA7) | (1<<PORTA6) | (1<<PORTA5) | (1<<PORTA4) | (1<<PORTA3) | (1<<PORTA2) | (1<<PORTA1) | (1<<PORTA0);
;PCODE: $00000011 VOL: 0
;PCODE: $00000012 VOL: 0
; 0002 000D 
; 0002 000E // Port B initialization
; 0002 000F // Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
; 0002 0010 DDRB=(0<<DDB7) | (0<<DDB6) | (0<<DDB5) | (0<<DDB4) | (0<<DDB3) | (0<<DDB2) | (0<<DDB1) | (0<<DDB0);
;PCODE: $00000013 VOL: 0
;PCODE: $00000014 VOL: 0
; 0002 0011 // State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=P Bit2=P Bit1=T Bit0=T
; 0002 0012 PORTB=(0<<PORTB7) | (0<<PORTB6) | (0<<PORTB5) | (0<<PORTB4) | (1<<PORTB3) | (1<<PORTB2) | (0<<PORTB1) | (0<<PORTB0);
;PCODE: $00000015 VOL: 0
;PCODE: $00000016 VOL: 0
; 0002 0013 
; 0002 0014 // Port C initialization
; 0002 0015 // Function: Bit7=Out Bit6=Out Bit5=Out Bit4=Out Bit3=Out Bit2=Out Bit1=Out Bit0=Out
; 0002 0016 DDRC=(1<<DDC7) | (1<<DDC6) | (1<<DDC5) | (1<<DDC4) | (1<<DDC3) | (1<<DDC2) | (1<<DDC1) | (1<<DDC0);
;PCODE: $00000017 VOL: 0
;PCODE: $00000018 VOL: 0
; 0002 0017 // State: Bit7=0 Bit6=0 Bit5=0 Bit4=0 Bit3=0 Bit2=0 Bit1=0 Bit0=0
; 0002 0018 PORTC=(0<<PORTC7) | (0<<PORTC6) | (0<<PORTC5) | (0<<PORTC4) | (0<<PORTC3) | (0<<PORTC2) | (0<<PORTC1) | (0<<PORTC0);
;PCODE: $00000019 VOL: 0
;PCODE: $0000001A VOL: 0
; 0002 0019 
; 0002 001A // Port D initialization
; 0002 001B // Function: Bit7=Out Bit6=Out Bit5=Out Bit4=Out Bit3=In Bit2=In Bit1=In Bit0=In
; 0002 001C DDRD=(1<<DDD7) | (1<<DDD6) | (1<<DDD5) | (1<<DDD4) | (0<<DDD3) | (0<<DDD2) | (0<<DDD1) | (0<<DDD0);
;PCODE: $0000001B VOL: 0
;PCODE: $0000001C VOL: 0
; 0002 001D // State: Bit7=0 Bit6=0 Bit5=0 Bit4=0 Bit3=T Bit2=T Bit1=T Bit0=T
; 0002 001E PORTD=(0<<PORTD7) | (0<<PORTD6) | (0<<PORTD5) | (0<<PORTD4) | (0<<PORTD3) | (0<<PORTD2) | (0<<PORTD1) | (0<<PORTD0);
;PCODE: $0000001D VOL: 0
;PCODE: $0000001E VOL: 0
; 0002 001F 
; 0002 0020 // Timer/Counter 0 initialization
; 0002 0021 // Clock source: System Clock
; 0002 0022 // Clock value: 8000.000 kHz
; 0002 0023 // Mode: Normal top=0xFF
; 0002 0024 // OC0 output: Disconnected
; 0002 0025 // Timer Period: 0.01 ms
; 0002 0026 TCCR0=(0<<WGM00) | (0<<COM01) | (0<<COM00) | (0<<WGM01) | (0<<CS02) | (0<<CS01) | (1<<CS00);
;PCODE: $0000001F VOL: 0
;PCODE: $00000020 VOL: 0
; 0002 0027 TCNT0=0xB0;
;PCODE: $00000021 VOL: 0
;PCODE: $00000022 VOL: 0
; 0002 0028 OCR0=0x00;
;PCODE: $00000023 VOL: 0
;PCODE: $00000024 VOL: 0
; 0002 0029 
; 0002 002A // Timer(s)/Counter(s) Interrupt(s) initialization
; 0002 002B TIMSK=(0<<OCIE2) | (0<<TOIE2) | (0<<TICIE1) | (0<<OCIE1A) | (0<<OCIE1B) | (0<<TOIE1) | (0<<OCIE0) | (1<<TOIE0);
;PCODE: $00000025 VOL: 0
;PCODE: $00000026 VOL: 0
; 0002 002C 
; 0002 002D // External Interrupt(s) initialization
; 0002 002E // INT0: On
; 0002 002F // INT0 Mode: Falling Edge
; 0002 0030 // INT1: On
; 0002 0031 // INT1 Mode: Falling Edge
; 0002 0032 // INT2: On
; 0002 0033 // INT2 Mode: Falling Edge
; 0002 0034 GICR|=(1<<INT1) | (1<<INT0) | (1<<INT2);
;PCODE: $00000027 VOL: 0
;PCODE: $00000028 VOL: 0
;PCODE: $00000029 VOL: 0
; 0002 0035 MCUCR=(1<<ISC11) | (0<<ISC10) | (1<<ISC01) | (0<<ISC00);
;PCODE: $0000002A VOL: 0
;PCODE: $0000002B VOL: 0
; 0002 0036 MCUCSR=(0<<ISC2);
;PCODE: $0000002C VOL: 0
;PCODE: $0000002D VOL: 0
; 0002 0037 GIFR=(1<<INTF1) | (1<<INTF0) | (1<<INTF2);
;PCODE: $0000002E VOL: 0
;PCODE: $0000002F VOL: 0
; 0002 0038 
; 0002 0039 // Alphanumeric LCD initialization
; 0002 003A // Connections are specified in the
; 0002 003B // Project|Configure|C Compiler|Libraries|Alphanumeric LCD menu:
; 0002 003C // RS - PORTC Bit 0
; 0002 003D // RD - PORTC Bit 1
; 0002 003E // EN - PORTC Bit 2
; 0002 003F // D4 - PORTC Bit 4
; 0002 0040 // D5 - PORTC Bit 5
; 0002 0041 // D6 - PORTC Bit 6
; 0002 0042 // D7 - PORTC Bit 7
; 0002 0043 // Characters/line: 16
; 0002 0044 lcd_init(16);
;PCODE: $00000030 VOL: 0
;PCODE: $00000031 VOL: 0
; 0002 0045 
; 0002 0046 // Global enable interrupts
; 0002 0047 #asm("sei")
;PCODE: $00000032 VOL: 0
	sei
;PCODE: $00000033 VOL: 0
; 0002 0048 }
;PCODE: $00000034 VOL: 0
;PCODE: $00000035 VOL: 0
